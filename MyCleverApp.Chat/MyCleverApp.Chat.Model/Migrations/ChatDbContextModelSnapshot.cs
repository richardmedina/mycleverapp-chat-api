// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyCleverApp.Chat.Model;

namespace MyCleverApp.Chat.Model.Migrations
{
    [DbContext(typeof(ChatDbContext))]
    partial class ChatDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyCleverApp.Chat.Model.Entities.ContactInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("DisplayImage");

                    b.Property<string>("DisplayName");

                    b.Property<DateTime>("ModifiedOn");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("ContactInfo");
                });

            modelBuilder.Entity("MyCleverApp.Chat.Model.Entities.ContactList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Description");

                    b.Property<DateTime>("ModifiedOn");

                    b.Property<string>("Name");

                    b.Property<long>("OwnerUserId");

                    b.HasKey("Id");

                    b.HasIndex("OwnerUserId");

                    b.ToTable("ContactList");
                });

            modelBuilder.Entity("MyCleverApp.Chat.Model.Entities.ContactListContact", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ContactInfoId");

                    b.Property<long>("ContactListId");

                    b.HasKey("Id");

                    b.HasIndex("ContactInfoId");

                    b.HasIndex("ContactListId");

                    b.ToTable("ContactListContact");
                });

            modelBuilder.Entity("MyCleverApp.Chat.Model.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ContactInfoId");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<DateTime>("ModifiedOn");

                    b.Property<string>("Password");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.HasIndex("ContactInfoId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("MyCleverApp.Chat.Model.Entities.ContactList", b =>
                {
                    b.HasOne("MyCleverApp.Chat.Model.Entities.User", "OwnerUser")
                        .WithMany("ContactLists")
                        .HasForeignKey("OwnerUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyCleverApp.Chat.Model.Entities.ContactListContact", b =>
                {
                    b.HasOne("MyCleverApp.Chat.Model.Entities.ContactInfo", "ContactInfo")
                        .WithMany("ContactListContact")
                        .HasForeignKey("ContactInfoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MyCleverApp.Chat.Model.Entities.ContactList", "ContactList")
                        .WithMany("ContactListContact")
                        .HasForeignKey("ContactListId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyCleverApp.Chat.Model.Entities.User", b =>
                {
                    b.HasOne("MyCleverApp.Chat.Model.Entities.ContactInfo", "ContactInfo")
                        .WithMany()
                        .HasForeignKey("ContactInfoId");
                });
#pragma warning restore 612, 618
        }
    }
}
